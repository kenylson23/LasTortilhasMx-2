// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  sid    String   @id @db.VarChar
  sess   Json     @db.JsonB
  expire DateTime @db.Timestamp(6)

  @@index([expire], map: "IDX_session_expire")
  @@map("sessions")
}

model User {
  id              String    @id @db.VarChar
  email           String?   @unique @db.VarChar
  firstName       String?   @map("first_name") @db.VarChar
  lastName        String?   @map("last_name") @db.VarChar
  profileImageUrl String?   @map("profile_image_url") @db.VarChar
  createdAt       DateTime? @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt       DateTime? @default(now()) @map("updated_at") @db.Timestamp(6)

  @@map("users")
}

model Reservation {
  id        Int      @id @default(autoincrement())
  name      String
  phone     String
  email     String?
  date      String
  time      String
  guests    Int
  notes     String?
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)

  @@map("reservations")
}

model Contact {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  phone     String?
  message   String
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)

  @@map("contacts")
}

model MenuItem {
  id              Int           @id @default(autoincrement())
  name            String
  description     String
  price           Decimal       @db.Decimal(10, 2)
  category        String
  image           String?
  available       Boolean?      @default(true)
  preparationTime Int?          @default(15) @map("preparation_time")
  customizations  String[]
  createdAt       DateTime?     @default(now()) @map("created_at") @db.Timestamp(6)
  
  orderItems      OrderItem[]

  @@map("menu_items")
}

model Table {
  id         Int      @id @default(autoincrement())
  locationId String   @map("location_id")
  tableNumber Int     @map("table_number")
  seats      Int
  status     String   @default("available") // "available", "occupied", "reserved", "maintenance"
  createdAt  DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  
  orders     Order[]

  @@map("tables")
}

model Order {
  id                    Int         @id @default(autoincrement())
  customerName          String      @map("customer_name")
  customerPhone         String      @map("customer_phone")
  customerEmail         String?     @map("customer_email")
  deliveryAddress       String?     @map("delivery_address")
  orderType             String      @map("order_type") // "delivery", "takeaway", "dine-in"
  locationId            String      @map("location_id") // "ilha", "talatona", "movel"
  tableId               Int?        @map("table_id")
  status                String      @default("received") // "received", "preparing", "ready", "delivered", "cancelled"
  totalAmount           Decimal     @map("total_amount") @db.Decimal(10, 2)
  paymentMethod         String      @map("payment_method") // "cash", "card", "transfer"
  paymentStatus         String      @default("pending") @map("payment_status") // "pending", "paid", "failed"
  notes                 String?
  estimatedDeliveryTime String?     @map("estimated_delivery_time")
  createdAt             DateTime    @default(now()) @map("created_at") @db.Timestamp(6)
  
  table                 Table?      @relation(fields: [tableId], references: [id])
  items                 OrderItem[]

  @@map("orders")
}

model OrderItem {
  id             Int      @id @default(autoincrement())
  orderId        Int      @map("order_id")
  menuItemId     Int      @map("menu_item_id")
  quantity       Int
  unitPrice      Decimal  @map("unit_price") @db.Decimal(10, 2)
  customizations String[]
  createdAt      DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  
  order          Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  menuItem       MenuItem @relation(fields: [menuItemId], references: [id])

  @@map("order_items")
}