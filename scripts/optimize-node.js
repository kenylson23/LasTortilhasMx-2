#!/usr/bin/env node

/**
 * Script de otimiza√ß√£o para Node.js
 * Otimiza a performance e configura√ß√µes do Node.js para o projeto Las Tortillas
 */

const { exec } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üöÄ Iniciando otimiza√ß√£o do Node.js...\n');

// Verificar vers√µes do Node.js e npm
exec('node --version && npm --version', (error, stdout, stderr) => {
  if (error) {
    console.error('‚ùå Erro ao verificar vers√µes:', error);
    return;
  }
  console.log('‚úÖ Vers√µes atuais:');
  console.log(stdout);
});

// Limpar cache do npm
exec('npm cache clean --force', (error, stdout, stderr) => {
  if (error) {
    console.error('‚ùå Erro ao limpar cache:', error);
    return;
  }
  console.log('‚úÖ Cache do npm limpo');
});

// Verificar e otimizar depend√™ncias
console.log('üì¶ Verificando depend√™ncias...');
exec('npm ls --depth=0', (error, stdout, stderr) => {
  if (error) {
    console.log('‚ö†Ô∏è  Algumas depend√™ncias podem precisar de corre√ß√£o');
  }
  
  // Verificar vulnerabilidades de seguran√ßa
  exec('npm audit --audit-level moderate', (error, stdout, stderr) => {
    if (error) {
      console.log('üîí Vulnerabilidades encontradas - execute npm audit fix');
    } else {
      console.log('‚úÖ Nenhuma vulnerabilidade cr√≠tica encontrada');
    }
  });
});

// Otimizar configura√ß√µes do projeto
const packageJsonPath = path.join(process.cwd(), 'package.json');
if (fs.existsSync(packageJsonPath)) {
  const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf8'));
  
  // Verificar se tem configura√ß√µes de otimiza√ß√£o
  if (!packageJson.engines) {
    packageJson.engines = {
      "node": ">=20.0.0",
      "npm": ">=10.0.0"
    };
  }
  
  // Adicionar configura√ß√µes de performance
  if (!packageJson.config) {
    packageJson.config = {
      "node-options": "--max-old-space-size=4096"
    };
  }
  
  fs.writeFileSync(packageJsonPath, JSON.stringify(packageJson, null, 2));
  console.log('‚úÖ Configura√ß√µes de otimiza√ß√£o adicionadas ao package.json');
}

// Verificar configura√ß√£o do TypeScript
const tsConfigPath = path.join(process.cwd(), 'tsconfig.json');
if (fs.existsSync(tsConfigPath)) {
  console.log('‚úÖ Configura√ß√£o TypeScript encontrada');
} else {
  console.log('‚ö†Ô∏è  Configura√ß√£o TypeScript n√£o encontrada');
}

console.log('\nüéâ Otimiza√ß√£o conclu√≠da!');
console.log('üí° Dicas para melhor performance:');
console.log('- Execute "npm run dev" para desenvolvimento');
console.log('- Use "npm run build" para produ√ß√£o');
console.log('- Monitore o uso de mem√≥ria com "node --inspect"');
console.log('- Mantenha as depend√™ncias atualizadas com "npm update"');